language: node_js
node_js: '11'
dist: xenial
# When pushing a tagged commit, Travis adds two builds: one with the tag, one
# without. We only want to build the one with the tag, because it's the one
# that runs the deployment stage
if: '!(commit_message =~ /^Release/ && tag is blank)'
jobs:
  include:
    # Test on Windows/Mac/Linux using latest Node.js.
    # Also test on Linux with older Node.js versions.
    # We do not run each possible combination to make CI faster.
    # - os: windows
    # - os: osx
    # - node_js: '8.10.0'
    # - node_js: '10'
    # - node_js: '11'
    # Test coverage check must happen after tests for the whole matrix have
    # been performed, so we get the merged coverage map
    # - stage: Coverage check
    # If CI fails, codecov does not post a bot comment on PR, so we skip them.
    #   if: type != pull_request
    #   script: gulp coverage
    # Deployment must happen after tests for the whole matrix have been
    # performed, so we use `jobs.include` with a different `stage`.
    - stage: Deploy
      script: 'if [[ $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_TAG ]]; then gulp publish; fi'
      # NPM_TOKEN environment variable
      env:
        secure: iKAIj/G3X659sSQzl0kU9G/mL71nbtX3fWpOonaxA8N3vYDMAcb0j5zcpk6jFVRapkW3fSYur055avlgNCgxhz210ezf0IaoH6Tg7U0S135AvXgn3JE4h/AZokr2rjyDZ94QuUKnCx3iad8nO6WTQSMs1VZV+/HpDOJf6K1sz0HtyGL+hjKsGCsWIBhff2GosNIFsYjsobiRABvuDp3mjBlldUfx8Dg6m4H6o/cu72uXZ7s/BSHmFsznUxs5Pz/83DswMuF5+Nh3D5+Su3VqVJ15VWZclTEaCrQQWpSNKXrZGYUeL9YTb2hu2YIpdAq7crDvPt7cZTAKRvwB1WXBQevkOeA2HM+MA+nD2gW139hxn40ovGM4HbTZJmDatMIKIlY22lelpJifU9NEvHkpABQCFQEl+UBYHhY/g+WCZtggRcx09N+Ieo6zwee3CpiHTm2SwmK4iVYakzV0I2kcD53OkTLqUMlppL2ANyflkFiUp5AmmADtJyHLf1vsc1TkDJiW96wgZdgQtGVTJRuabgZH32OX2nT4M4AmYQVZxhhUbQnfqQivZDJuUSI/CMPmhOnR2ku98/EMd4/NgWwEjMrmE9W5vV9nezF+FrlUfHIV4MFBt1vfgJ//7gAKrIu7ntquxaQ8EMnqFYUiPk4jcAIPFaRPWErSS7PhRmCHRFI=
notifications:
  webhooks:
    - https://www.travisbuddy.com?only=failed,errored&insertMode=update
  email: false
# We do not use `cache: npm` because downloading and uploading the cache
# actually takes more time than it saves during `npm ci`.
